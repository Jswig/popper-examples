badge-server-url: http://badges.falsifiable.us
metadata:
  access_right: open
  license: CC-BY-4.0
  publication_type: article
  upload_type: publication
pipelines:
  blis:
    envs:
      host:
        args: []
    path: pipelines/blis
    stages:
    - build-docker-image
    - run
    - analyze
    - validate
  chameleon-benchmarking:
    envs:
    - host
    path: pipelines/chameleon-benchmarking
    stages:
    - setup.sh
    - run.sh
    - teardown.sh
  cloudlab-benchmarking:
    envs:
      host:
        args: []
    path: pipelines/cloudlab-benchmarking
    stages:
    - setup.sh
    - run.sh
    - teardown.sh
  data-world:
    envs:
      host:
        args: []
    path: pipelines/data-world
    stages:
    - run
    - update-data-world-repo
  datapackage:
    envs:
      host:
        args: []
    path: pipelines/datapackage
    stages:
    - run.sh
    - update-datapackage.sh
  docker-data-science:
    envs:
      host:
        args: []
    path: pipelines/docker-data-science
    stages:
    - setup
    - analyze
    - generate-figures
  envvar-param:
    envs:
      host:
        args: []
    path: pipelines/envvar-param
    stages:
    - run
  gce-benchmarking:
    envs:
    - host
    path: pipelines/gce-benchmarking
    stages:
    - setup.sh
    - run.sh
    - teardown.sh
  genomics:
    envs:
      host:
        args: []
    path: pipelines/genomics
    stages:
    - setup.sh
    - run.sh
    - post-run.sh
    - concordance.sh
    - validate.sh
    - teardown.sh
  perihelion-mercury:
    envs:
    - host
    path: pipelines/perihelion-mercury
    requirements: {}
    stages:
    - setup
    - run
    vars: []
  pgbench:
    envs:
      host:
        args: []
    path: pipelines/pgbench
    stages:
    - setup
    - run
    - cleanup
    - analyze
  sea-surface-mapping-r:
    envs:
    - host
    path: pipelines/sea-surface-mapping-r
    stages:
    - setup.sh
    - run.sh
  vagrant-linux:
    envs:
      host:
        args: []
    path: pipelines/vagrant-linux
    stages:
    - init
    - build-kernel
    - deploy-kernel
    - run
    - visualize
  validator:
    envs:
      host:
        args: []
    path: pipelines/validator
    stages:
    - virtual-environment-checker.sh
    - generate-data.sh
    - validate.sh
search_sources:
- popperized
version: 1
